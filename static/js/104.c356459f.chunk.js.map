{"version":3,"file":"static/js/104.c356459f.chunk.js","mappings":"+RAEAA,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAEL,SAASC,IACb,OAAOF,IAAAA,IAAA,uCAA0CC,GAEnD,CAEM,SAASE,EAAiBC,GAC9B,OAAOJ,IAAAA,IAAA,gCAAmCC,EAAnC,kBAAgDG,EAAhD,+BACT,CAEM,SAASC,EAAaC,GAC1B,OAAON,IAAAA,IAAA,iBAAoBM,EAApB,oBAAkCL,GAC3C,CAEM,SAASM,EAAiBD,GAC9B,OAAON,IAAAA,IAAA,iBAAoBM,EAApB,4BAA0CL,GACnD,CAEM,SAASO,EAAoBF,GACjC,OAAON,IAAAA,IAAA,iBAAoBM,EAApB,4BAA0CL,GACnD,C,gJCtBYQ,EAAWC,EAAAA,GAAAA,GAAH,8HAQRC,EAAUD,EAAAA,GAAAA,IAAH,kFAMPE,EAAWF,EAAAA,GAAAA,GAAH,4CAIRG,EAAgBH,EAAAA,GAAAA,GAAH,mF,SCdnB,SAASI,IACf,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACTH,GAAa,IACbZ,EAAAA,EAAAA,IAAiBa,GACfG,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACRP,EAAQO,EAAKR,KAEb,IACAS,MAAMC,QAAQC,KACdC,SAAQ,WACRT,GAAa,EACb,GACF,GAAE,CAACC,KAGH,UAACX,EAAD,WACES,IAAa,SAACW,EAAA,EAAD,IACbb,GACQA,EAAKc,KAAI,YAA4C,IAAzCxB,EAAwC,EAAxCA,GAAIyB,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAExBC,EAAaD,EAAY,wCAAoCA,GAAiB,oGACpF,OACV,2BACC,SAACtB,EAAD,CAASwB,IAAKD,EAAYE,IAAKL,EAAMM,MAAO,IAAKC,OAAQ,OAC7C,SAAC1B,EAAD,UAAWmB,KACX,UAAClB,EAAD,yBAA4BmB,OAHhC1B,EAMD,MAGZ,C","sources":["api/movieDBApi.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = 'b97b15a6557134236e51fc0964baa8bb';\n\nexport function getTrendingMovies() {\n   return axios.get(`/trending/movie/week?api_key=${KEY}`)\n\n}\n\nexport function getMoviesByQuery(query) {\n   return axios.get(`/search/movie?api_key=${KEY}&query=${query}&page=1&include_adult=false`)\n}\n\nexport function getMovieById(id) {\n   return axios.get(`/movie/${id}?api_key=${KEY}`)\n}\n\nexport function getMovieCastById(id) {\n   return axios.get(`/movie/${id}/credits?api_key=${KEY}`)\n}\n\nexport function getMovieReviewsById(id) {\n   return axios.get(`/movie/${id}/reviews?api_key=${KEY}`)\n}","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n   display: flex;\n\tjustify-content: center;\n\tflex-wrap: wrap;\n\tgap: 20px;\n\tlist-style: none;\n`;\n\nexport const CastImg = styled.img`\n\tmargin-right: 30px;\n\twidth: 200px;\n\theight: 300px;\n`;\n\nexport const CastName = styled.h2`\n\tfont-size: 14px;\n`;\n\nexport const CastCharacter = styled.h2`\n\tfont-size: 12px;\n   color: #e3cfbfed;\n\twidth: 199px;\n`;","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCastById } from '../../api/movieDBApi';\nimport { Loader } from 'components/Loader';\nimport { CastList, CastImg, CastName, CastCharacter } from './Cast.styled';\n\nexport function Cast() {\n\tconst [cast, setCast] = useState(null);\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst { movieId } = useParams();\n\n\tuseEffect(() => {\n\t\tsetIsLoading(true);\n\t\tgetMovieCastById(movieId)\n\t\t\t.then(({ data }) => {\n\t\t\t\tsetCast(data.cast);\n\t\t\t\t// console.log(data.cast);\n\t\t\t})\n\t\t\t.catch(console.log)\n\t\t\t.finally(() => {\n\t\t\t\tsetIsLoading(false);\n\t\t\t});;\n\t}, [movieId]);\n\n\treturn (\n\t\t<CastList>\n\t\t\t{isLoading && <Loader/>}\n\t\t\t{cast &&\n            cast.map(({ id, name, character, profile_path }) => {\n\n               const checkImage = profile_path ? `http://image.tmdb.org/t/p/w500${profile_path}` : 'https://archives.csusm.edu/student-newspapers/files/original/471bb8c5afdfe8e769c93f1aee2ad1c1.jpg'\n               return (\n\t\t\t\t\t<li key={id}>\n\t\t\t\t\t\t<CastImg src={checkImage} alt={name} width={100} height={150} />\n                  <CastName>{name}</CastName>\n                  <CastCharacter>Character: { character}</CastCharacter>\n\t\t\t\t\t</li>\n\t\t\t\t)\n            })}\n\t\t</CastList>\n\t);\n}\n\n"],"names":["axios","KEY","getTrendingMovies","getMoviesByQuery","query","getMovieById","id","getMovieCastById","getMovieReviewsById","CastList","styled","CastImg","CastName","CastCharacter","Cast","useState","cast","setCast","isLoading","setIsLoading","movieId","useParams","useEffect","then","data","catch","console","log","finally","Loader","map","name","character","profile_path","checkImage","src","alt","width","height"],"sourceRoot":""}